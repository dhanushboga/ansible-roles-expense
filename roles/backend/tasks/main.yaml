- name: disable the nodeJS old version
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable the nodeJS version 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install the node JS and mysql
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql
  
- name: Add the expense user
  ansible.builtin.user:
    name: expense

- name: include from common role
  include_role:
   name: common
   tasks_form: main

# - name: Create a directory 
#   ansible.builtin.file:
#     path: /app
#     state: directory

# - name: Download a nodeJS code
#   ansible.builtin.get_url:
#      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#      dest: /tmp/backend.zip

# - name: Extract the code from url
#   ansible.builtin.unarchive:
#     src: /tmp/backend.zip
#     dest: /app
#     remote_src: yes

- name: install the dependencies
  community.general.npm:
    path: /app

- name: Copy backend.service
  ansible.builtin.template: #it will search in templates folder
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install the mysql libs
  ansible.builtin.pip:
    name: "{{ item }}"
    executable: pip3.9
  loop:
   - PyMySQL
   - cryptography

- name: importing the database
  community.mysql.mysql_db:
     state: import
     name: all
     login_user: "{{ mysql_user }}"
     login_password: "{{ sql_password }}"
     login_host: "{{ MYSQL_HOST }}"
     target: /app/schema/backend.sql
     

- name: reloading the daemon service
  ansible.builtin.systemd_service:
     enabled: yes
     state: restarted
     daemon_reload: true
     name: backend